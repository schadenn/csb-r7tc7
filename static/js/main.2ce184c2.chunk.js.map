{"version":3,"sources":["styles.js","App.js","index.js"],"names":["baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","App","useState","images","setImages","showImages","setShowImages","width","setWidth","error","setError","parseData","toParse","data","JSON","parse","console","log","urls","Object","entries","brands","map","id","entry","name","displayName","icon","url","feature","logo","onDrop","useCallback","acceptedFiles","reader","FileReader","onabort","onerror","onload","result","_e","forEach","file","readAsText","useDropzone","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","useMemo","className","onClick","rows","cols","onChange","ev","target","value","placeholder","type","image","src","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.2ce184c2.chunk.js","sourcesContent":["const baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\"\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\"\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\"\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\"\n};\n\nexport { baseStyle, activeStyle, acceptStyle, rejectStyle };\n","import \"./styles.css\";\nimport { useState, useCallback, useMemo } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { baseStyle, activeStyle, acceptStyle, rejectStyle } from \"./styles\";\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [showImages, setShowImages] = useState(false);\n  const [width, setWidth] = useState(80);\n  const [error, setError] = useState(false);\n\n  const parseData = (toParse) => {\n    const { data } = JSON.parse(toParse);\n    console.log(data);\n    const urls = Object.entries(data.brands).map(([id, entry]) => {\n      return {\n        id: id,\n        name: entry?.displayName,\n        icon: entry?.icon?.url,\n        feature: entry?.feature?.url,\n        logo: entry?.logo?.url\n      };\n    });\n    setImages(urls);\n  };\n\n  const onDrop = useCallback((acceptedFiles) => {\n    const reader = new FileReader();\n\n    reader.onabort = () => console.log(\"file reading was aborted\");\n    reader.onerror = () => setError(true);\n    reader.onload = () => {\n      // Parse CSV file\n      try {\n        parseData(reader.result);\n      } catch (_e) {\n        setError(true);\n      }\n    };\n\n    // read file contents\n    acceptedFiles.forEach((file) => reader.readAsText(file));\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({ onDrop });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {})\n    }),\n    [isDragActive, isDragReject, isDragAccept]\n  );\n\n  return (\n    <div className=\"App\">\n      {error && (\n        <>\n          <p style={{ color: \"red\" }}>This file doesn't look right.</p>\n          <button onClick={() => setError(false)}>Okay</button>\n          <br />\n        </>\n      )}\n      <h3>Via file import</h3>\n      <div {...getRootProps({ style })}>\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <p>Drop the file here...</p>\n        ) : (\n          <p>\n            Drag 'n' drop the merchant list file here, or click to select file\n          </p>\n        )}\n      </div>\n      <h3>Paste directly</h3>\n      <textarea\n        rows=\"30\"\n        cols=\"80\"\n        onChange={(ev) => {\n          if (ev.target.value) parseData(ev.target.value);\n        }}\n      ></textarea>\n      <br />\n      <input\n        placeholder=\"image width\"\n        type=\"text\"\n        onChange={(ev) => setWidth(ev.target.value)}\n      />\n      <button\n        onClick={() => {\n          setShowImages(true);\n        }}\n      >\n        Show images\n      </button>\n      {showImages && (\n        <table>\n          <thead>\n            <td>Id</td>\n            <td>Name</td>\n            <td>Icon</td>\n            <td>Feature</td>\n            <td>Logo</td>\n          </thead>\n          {images.map((image) => (\n            <tr>\n              <td>{image.id}</td>\n              <td>{image.name}</td>\n              <td>\n                <img src={image.icon} width={width} />\n              </td>\n              <td>\n                <img src={image.feature} width={width} />\n              </td>\n              <td>\n                <img src={image.logo} width={width} />\n              </td>\n            </tr>\n          ))}\n        </table>\n      )}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}
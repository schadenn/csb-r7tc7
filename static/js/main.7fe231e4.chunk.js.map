{"version":3,"sources":["styles.js","App.js","index.js"],"names":["baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","App","useState","images","setImages","showImages","setShowImages","width","setWidth","error","setError","onDrop","useCallback","acceptedFiles","reader","FileReader","onabort","console","log","onerror","onload","data","JSON","parse","result","urls","Object","values","brands","map","entry","displayName","icon","url","feature","logo","reduce","acc","curr","_e","forEach","file","readAsText","useDropzone","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","useMemo","className","onClick","placeholder","type","onChange","ev","target","value","image","src","rootElement","document","getElementById","ReactDOM","render"],"mappings":"4LAAMA,EAAY,CAChBC,KAAM,EACNC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,QAAS,OACTC,YAAa,EACbC,aAAc,EACdC,YAAa,UACbC,YAAa,SACbC,gBAAiB,UACjBC,MAAO,UACPC,QAAS,OACTC,WAAY,2BAGRC,EAAc,CAClBN,YAAa,WAGTO,EAAc,CAClBP,YAAa,WAGTQ,EAAc,CAClBR,YAAa,W,OCpBA,SAASS,IACtB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA0BN,oBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAASC,uBAAY,SAACC,GAC1B,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,QAAU,kBAAMC,QAAQC,IAAI,6BACnCJ,EAAOK,QAAU,kBAAMT,GAAS,IAChCI,EAAOM,OAAS,WAEd,IACE,IAAQC,EAASC,KAAKC,MAAMT,EAAOU,QAA3BH,KACRJ,QAAQC,IAAIG,GACZ,IAAMI,EAAOC,OAAOC,OAAON,EAAKO,QAC7BC,KAAI,SAACC,GAAW,IAAD,MACd,MAAO,QACLA,QADK,IACLA,OADK,EACLA,EAAOC,YADF,OAELD,QAFK,IAELA,GAFK,UAELA,EAAOE,YAFF,aAEL,EAAaC,IAFR,OAGLH,QAHK,IAGLA,GAHK,UAGLA,EAAOI,eAHF,aAGL,EAAgBD,IAHX,OAILH,QAJK,IAILA,GAJK,UAILA,EAAOK,YAJF,aAIL,EAAaF,QAGhBG,QAAO,SAACC,EAAKC,GACZ,MAAM,GAAN,mBAAWD,GAAX,CAAgB,CAACC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,QAChD,IACLlC,EAAUqB,GACV,MAAOc,GACP7B,GAAS,KAKbG,EAAc2B,SAAQ,SAACC,GAAD,OAAU3B,EAAO4B,WAAWD,QACjD,IACH,EAMIE,YAAY,CAAEhC,WALhBiC,EADF,EACEA,aACAC,EAFF,EAEEA,cACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,aAGIC,EAAQC,mBACZ,8BAAC,uCACIlE,GACC8D,EAAehD,EAAc,IAC7BiD,EAAehD,EAAc,IAC7BiD,EAAehD,EAAc,MAEnC,CAAC8C,EAAcE,EAAcD,IAG/B,OACE,sBAAKI,UAAU,MAAf,UACG1C,GACC,qCACE,mBAAGwC,MAAO,CAAEtD,MAAO,OAAnB,2CACA,wBAAQyD,QAAS,kBAAM1C,GAAS,IAAhC,kBACA,0BAGJ,gDAASkC,EAAa,CAAEK,WAAxB,cACE,qCAAWJ,MACVC,EACC,sDAEA,uGAKJ,uBACA,uBACEO,YAAY,cACZC,KAAK,OACLC,SAAU,SAACC,GAAD,OAAQhD,EAASgD,EAAGC,OAAOC,UAEvC,wBACEN,QAAS,WACP9C,GAAc,IAFlB,yBAOCD,GACC,kCACE,kCACE,sCACA,sCACA,yCACA,yCAEDF,EAAO0B,KAAI,SAAC8B,GAAD,OACV,+BACE,6BAAKA,EAAM,KACX,6BACE,qBAAKC,IAAKD,EAAM,GAAIpD,MAAOA,MAE7B,6BACE,qBAAKqD,IAAKD,EAAM,GAAIpD,MAAOA,MAE7B,6BACE,qBAAKqD,IAAKD,EAAM,GAAIpD,MAAOA,kBCzG3C,IAAMsD,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAChE,EAAD,MAEF4D,K","file":"static/js/main.7fe231e4.chunk.js","sourcesContent":["const baseStyle = {\n  flex: 1,\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: \"#eeeeee\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#fafafa\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border .24s ease-in-out\"\n};\n\nconst activeStyle = {\n  borderColor: \"#2196f3\"\n};\n\nconst acceptStyle = {\n  borderColor: \"#00e676\"\n};\n\nconst rejectStyle = {\n  borderColor: \"#ff1744\"\n};\n\nexport { baseStyle, activeStyle, acceptStyle, rejectStyle };\n","import \"./styles.css\";\nimport { useState, useCallback, useMemo } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { baseStyle, activeStyle, acceptStyle, rejectStyle } from \"./styles\";\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [showImages, setShowImages] = useState(false);\n  const [width, setWidth] = useState(80);\n  const [error, setError] = useState(false);\n\n  const onDrop = useCallback((acceptedFiles) => {\n    const reader = new FileReader();\n\n    reader.onabort = () => console.log(\"file reading was aborted\");\n    reader.onerror = () => setError(true);\n    reader.onload = () => {\n      // Parse CSV file\n      try {\n        const { data } = JSON.parse(reader.result);\n        console.log(data);\n        const urls = Object.values(data.brands)\n          .map((entry) => {\n            return [\n              entry?.displayName,\n              entry?.icon?.url,\n              entry?.feature?.url,\n              entry?.logo?.url\n            ];\n          })\n          .reduce((acc, curr) => {\n            return [...acc, [curr[0], curr[1], curr[2], curr[3]]];\n          }, []);\n        setImages(urls);\n      } catch (_e) {\n        setError(true);\n      }\n    };\n\n    // read file contents\n    acceptedFiles.forEach((file) => reader.readAsText(file));\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({ onDrop });\n\n  const style = useMemo(\n    () => ({\n      ...baseStyle,\n      ...(isDragActive ? activeStyle : {}),\n      ...(isDragAccept ? acceptStyle : {}),\n      ...(isDragReject ? rejectStyle : {})\n    }),\n    [isDragActive, isDragReject, isDragAccept]\n  );\n\n  return (\n    <div className=\"App\">\n      {error && (\n        <>\n          <p style={{ color: \"red\" }}>This file doesn't look right.</p>\n          <button onClick={() => setError(false)}>Okay</button>\n          <br />\n        </>\n      )}\n      <div {...getRootProps({ style })}>\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <p>Drop the file here...</p>\n        ) : (\n          <p>\n            Drag 'n' drop the merchant list file here, or click to select file\n          </p>\n        )}\n      </div>\n      <br />\n      <input\n        placeholder=\"image width\"\n        type=\"text\"\n        onChange={(ev) => setWidth(ev.target.value)}\n      />\n      <button\n        onClick={() => {\n          setShowImages(true);\n        }}\n      >\n        Show images\n      </button>\n      {showImages && (\n        <table>\n          <thead>\n            <td>Name</td>\n            <td>Icon</td>\n            <td>Feature</td>\n            <td>Logo</td>\n          </thead>\n          {images.map((image) => (\n            <tr>\n              <td>{image[0]}</td>\n              <td>\n                <img src={image[1]} width={width} />\n              </td>\n              <td>\n                <img src={image[2]} width={width} />\n              </td>\n              <td>\n                <img src={image[3]} width={width} />\n              </td>\n            </tr>\n          ))}\n        </table>\n      )}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}